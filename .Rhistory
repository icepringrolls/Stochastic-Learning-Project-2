autoplot(pca_mat, data = happiness.X, colour=km.out$cluster,
label=F, label.size=5,
loadings = F, loadings.colour = 'blue',
loadings.label = F, loadings.label.size = 3)
K = 3
km.out <- kmeans(happiness.X, K, iter.max = 10)
autoplot(pca_mat, data = happiness.X, colour=km.out$cluster,
label=F, label.size=5,
loadings = F, loadings.colour = 'blue',
loadings.label = F, loadings.label.size = 3)
K = 4
km.out <- kmeans(happiness.X, K, iter.max = 10)
autoplot(pca_mat, data = happiness.X, colour=km.out$cluster,
label=F, label.size=5,
loadings = F, loadings.colour = 'blue',
loadings.label = F, loadings.label.size = 3)
K = 4
km.out <- kmeans(happiness.X, K, iter.max = 10)
autoplot(pca_mat, data = happiness.X, colour=km.out$cluster,
label=F, label.size=5,
loadings = F, loadings.colour = 'blue',
loadings.label = F, loadings.label.size = 3)
K = 4
km.out <- kmeans(happiness.X, K, iter.max = 10)
autoplot(pca_mat, data = happiness.X, colour=km.out$cluster,
label=F, label.size=5,
loadings = F, loadings.colour = 'blue',
loadings.label = F, loadings.label.size = 3)
K = 4
km.out <- kmeans(happiness.X, K, iter.max = 10)
autoplot(pca_mat, data = happiness.X, colour=km.out$cluster,
label=F, label.size=5,
loadings = F, loadings.colour = 'blue',
loadings.label = F, loadings.label.size = 3)
K = 4
km.out <- kmeans(happiness.X, K, iter.max = 10)
autoplot(pca_mat, data = happiness.X, colour=km.out$cluster,
label=F, label.size=5,
loadings = F, loadings.colour = 'blue',
loadings.label = F, loadings.label.size = 3)
K = 4
km.out <- kmeans(happiness.X, K, iter.max = 10)
autoplot(pca_mat, data = happiness.X, colour=km.out$cluster,
label=F, label.size=5,
loadings = F, loadings.colour = 'blue',
loadings.label = F, loadings.label.size = 3)
K = 4
km.out <- kmeans(happiness.X, K, iter.max = 10)
autoplot(pca_mat, data = happiness.X, colour=km.out$cluster,
label=F, label.size=5,
loadings = F, loadings.colour = 'blue',
loadings.label = F, loadings.label.size = 3)
K = 4
km.out <- kmeans(happiness.X, K, iter.max = 10)
autoplot(pca_mat, data = happiness.X, colour=km.out$cluster,
label=F, label.size=5,
loadings = F, loadings.colour = 'blue',
loadings.label = F, loadings.label.size = 3)
K = 4
km.out <- kmeans(happiness.X, K, iter.max = 10)
autoplot(pca_mat, data = happiness.X, colour=km.out$cluster,
label=F, label.size=5,
loadings = F, loadings.colour = 'blue',
loadings.label = F, loadings.label.size = 3)
K = 4
km.out <- kmeans(happiness.X, K, iter.max = 10)
autoplot(pca_mat, data = happiness.X, colour=km.out$cluster,
label=F, label.size=5,
loadings = F, loadings.colour = 'blue',
loadings.label = F, loadings.label.size = 3)
K = 4
km.out <- kmeans(happiness.X, K, iter.max = 10)
autoplot(pca_mat, data = happiness.X, colour=km.out$cluster,
label=T, label.size=5,
loadings = F, loadings.colour = 'blue',
loadings.label = F, loadings.label.size = 3)
K = 4
km.out <- kmeans(happiness.X, K, iter.max = 10)
autoplot(pca_mat, data = happiness.X, colour=km.out$cluster,
label=T, label.size=5,
loadings = F, loadings.colour = 'blue',
loadings.label = F, loadings.label.size = 3)
K = 4
km.out <- kmeans(happiness.X, K, iter.max = 10)
autoplot(pca_mat, data = happiness.X, colour=km.out$cluster,
label=F, label.size=5,
loadings = F, loadings.colour = 'blue',
loadings.label = F, loadings.label.size = 3)
km.out
km.out$cluster
km.out$withinss
km.out$cluster
clust <- km.out$cluster
clust[clust==2]
clust[clust=="Norway"]
clust[clust=="Norway"]
clust <- km.out$cluster
clust[clust==2]
clust["Norway"]
clust["Norway"]
clust <- km.out$cluster
clust["Norway"]
clust[c("Norway", "Sweden")]
clust[c("Norway", "Sweden")]
clust <- km.out$cluster
clust <- km.out$cluster
scand <- clust[c("Norway", "Denmark", "Sweden", "Finland")]
scand
sd(scand)
scand <- clust[c("Albania", "Denmark", "Sweden", "Finland")]
scand
sd(scand)
scand <- clust[c("Norway", "Denmark", "Sweden", "Finland")]
scand
sd(scand)
scans["Norway"]
scand["Norway"]
scand["Norway"] == scand["Denmark"]
scand["Norway"] == clust["Albania"]
K = 4
km.out <- kmeans(happiness.X, K, iter.max = 10)
invalidclustering <- function(km.out){
clust <- km.out$cluster
scand <- clust[c("Norway", "Denmark", "Sweden", "Finland")]
!(sd(scand) == 0 & clust["UnitedStates"] != scand["Norway"])
}
while(invalidclustering(km.out)){
km.out <- kmeans(happiness.X, K, iter.max = 10)
}
K = 4
km.out <- kmeans(happiness.X, K, iter.max = 10)
invalidclustering <- function(km.out){
clust <- km.out$cluster
scand <- clust[c("Norway", "Denmark", "Sweden", "Finland")]
print(!(sd(scand) == 0 & clust["UnitedStates"] != scand["Norway"]))
}
while(invalidclustering(km.out)){
km.out <- kmeans(happiness.X, K, iter.max = 10)
}
K = 4
km.out <- kmeans(happiness.X, K, iter.max = 10)
invalidclustering <- function(km.out){
clust <- km.out$cluster
scand <- clust[c("Norway", "Denmark", "Sweden", "Finland")]
print(!(sd(scand) == 0 && clust["UnitedStates"] != scand["Norway"]))
}
while(invalidclustering(km.out)){
km.out <- kmeans(happiness.X, K, iter.max = 10)
}
K = 4
km.out <- kmeans(happiness.X, K, iter.max = 10)
invalidclustering <- function(km.out){
clust <- km.out$cluster
scand <- clust[c("Norway", "Denmark", "Sweden", "Finland")]
print(!(sd(scand) == 0 and clust["UnitedStates"] != scand["Norway"]))
K = 4
km.out <- kmeans(happiness.X, K, iter.max = 10)
invalidclustering <- function(km.out){
clust <- km.out$cluster
scand <- clust[c("Norway", "Denmark", "Sweden", "Finland")]
print(!((sd(scand) == 0)  & (clust["UnitedStates"] != scand["Norway"])))
}
while(invalidclustering(km.out)){
km.out <- kmeans(happiness.X, K, iter.max = 10)
}
K = 4
km.out <- kmeans(happiness.X, K, iter.max = 10)
invalidclustering <- function(km.out){
clust <- km.out$cluster
scand <- clust[c("Norway", "Denmark", "Sweden", "Finland")]
print(!((sd(scand) == 0) & (clust["UnitedStates"] != scand["Norway"])))
}
while(invalidclustering(km.out)){
km.out <- kmeans(happiness.X, K, iter.max = 10)
}
K = 4
km.out <- kmeans(happiness.X, K, iter.max = 10)
invalidclustering <- function(km.out){
clust <- km.out$cluster
scand <- clust[c("Norway", "Denmark", "Sweden", "Finland")]
print(sd(scand) == 0)
print(!((sd(scand) == 0) & (clust["UnitedStates"] != scand["Norway"])))
}
while(invalidclustering(km.out)){
km.out <- kmeans(happiness.X, K, iter.max = 10)
}
K = 4
km.out <- kmeans(happiness.X, K, iter.max = 10)
invalidclustering <- function(km.out){
clust <- km.out$cluster
scand <- clust[c("Norway", "Denmark", "Sweden", "Finland")]
print(sd(scand) == 0)
print(clust["UnitedStates"] != scand["Norway"])
print(!((sd(scand) == 0) & (clust["UnitedStates"] != scand["Norway"])))
}
while(invalidclustering(km.out)){
km.out <- kmeans(happiness.X, K, iter.max = 10)
}
K = 4
km.out <- kmeans(happiness.X, K, iter.max = 10)
invalidclustering <- function(km.out){
clust <- km.out$cluster
scand <- clust[c("Norway", "Denmark", "Sweden", "Finland")]
print(sd(scand) == 0)
print(clust["USA"] != scand["Norway"])
print(!((sd(scand) == 0) & (clust["UnitedStates"] != scand["Norway"])))
}
while(invalidclustering(km.out)){
km.out <- kmeans(happiness.X, K, iter.max = 10)
}
K = 4
km.out <- kmeans(happiness.X, K, iter.max = 10)
invalidclustering <- function(km.out){
clust <- km.out$cluster
scand <- clust[c("Norway", "Denmark", "Sweden", "Finland")]
print(sd(scand) == 0)
print(clust["US"] != scand["Norway"])
print(!((sd(scand) == 0) & (clust["UnitedStates"] != scand["Norway"])))
}
while(invalidclustering(km.out)){
km.out <- kmeans(happiness.X, K, iter.max = 10)
}
K = 4
km.out <- kmeans(happiness.X, K, iter.max = 10)
invalidclustering <- function(km.out){
clust <- km.out$cluster
scand <- clust[c("Norway", "Denmark", "Sweden", "Finland")]
print(sd(scand) == 0)
print(clust["usa"] != scand["Norway"])
print(!((sd(scand) == 0) & (clust["UnitedStates"] != scand["Norway"])))
}
while(invalidclustering(km.out)){
km.out <- kmeans(happiness.X, K, iter.max = 10)
}
View(km.out)
View(km.out)
km.out$cluster
K = 4
km.out <- kmeans(happiness.X, K, iter.max = 10)
km.out$cluster
invalidclustering <- function(km.out){
clust <- km.out$cluster
scand <- clust[c("Norway", "Denmark", "Sweden", "Finland")]
print(sd(scand) == 0)
print(clust["usa"] != scand["Norway"])
print(!((sd(scand) == 0) & (clust["United States"] != scand["Norway"])))
}
while(invalidclustering(km.out)){
km.out <- kmeans(happiness.X, K, iter.max = 10)
}
autoplot(pca_mat, data = happiness.X, colour=km.out$cluster,
label=F, label.size=5,
loadings = F, loadings.colour = 'blue',
loadings.label = F, loadings.label.size = 3)
K = 4
km.out <- kmeans(happiness.X, K, iter.max = 10)
invalidclustering <- function(km.out){
clust <- km.out$cluster
scand <- clust[c("Norway", "Denmark", "Sweden", "Finland")]
!((sd(scand) == 0) & (clust["United States"] != scand["Norway"]))
}
while(invalidclustering(km.out)){
km.out <- kmeans(happiness.X, K, iter.max = 10)
}
autoplot(pca_mat, data = happiness.X, colour=km.out$cluster,
label=F, label.size=5,
loadings = F, loadings.colour = 'blue',
loadings.label = F, loadings.label.size = 3)
K = 4
km.out <- kmeans(happiness.X, K, iter.max = 10)
invalidclustering <- function(km.out){
clust <- km.out$cluster
scand <- clust[c("Norway", "Denmark", "Sweden", "Finland")]
!((sd(scand) == 0) & (clust["United States"] != scand["Norway"]))
}
i <- 1
while(invalidclustering(km.out)){
print(paste("iteration", i))
i <- i + 1
km.out <- kmeans(happiness.X, K, iter.max = 10)
}
autoplot(pca_mat, data = happiness.X, colour=km.out$cluster,
label=F, label.size=5,
loadings = F, loadings.colour = 'blue',
loadings.label = F, loadings.label.size = 3)
K = 4
km.out <- kmeans(happiness.X, K, iter.max = 10)
invalidclustering <- function(km.out){
clust <- km.out$cluster
scand <- clust[c("Norway", "Denmark", "Sweden", "Finland")]
!((sd(scand) == 0) & (clust["United States"] != scand["Norway"]))
}
i <- 1
print(paste("iteration", i))
while(invalidclustering(km.out)){
i <- i + 1
print(paste("iteration", i))
km.out <- kmeans(happiness.X, K, iter.max = 10)
}
autoplot(pca_mat, data = happiness.X, colour=km.out$cluster,
label=F, label.size=5,
loadings = F, loadings.colour = 'blue',
loadings.label = F, loadings.label.size = 3)
K = 1
km.out <- kmeans(happiness.X, K, iter.max = 10)
invalidclustering <- function(km.out){
clust <- km.out$cluster
scand <- clust[c("Norway", "Denmark", "Sweden", "Finland")]
!((sd(scand) == 0) & (clust["United States"] != scand["Norway"]))
}
i <- 1
print(paste("iteration", i))
while(invalidclustering(km.out)){
i <- i + 1
print(paste("iteration", i))
km.out <- kmeans(happiness.X, K, iter.max = 10)
}
K = 2
km.out <- kmeans(happiness.X, K, iter.max = 10)
invalidclustering <- function(km.out){
clust <- km.out$cluster
scand <- clust[c("Norway", "Denmark", "Sweden", "Finland")]
!((sd(scand) == 0) & (clust["United States"] != scand["Norway"]))
}
i <- 1
print(paste("iteration", i))
while(invalidclustering(km.out)){
i <- i + 1
print(paste("iteration", i))
km.out <- kmeans(happiness.X, K, iter.max = 10)
}
K = 3
km.out <- kmeans(happiness.X, K, iter.max = 10)
invalidclustering <- function(km.out){
clust <- km.out$cluster
scand <- clust[c("Norway", "Denmark", "Sweden", "Finland")]
!((sd(scand) == 0) & (clust["United States"] != scand["Norway"]))
}
i <- 1
print(paste("iteration", i))
while(invalidclustering(km.out)){
i <- i + 1
print(paste("iteration", i))
km.out <- kmeans(happiness.X, K, iter.max = 10)
}
autoplot(pca_mat, data = happiness.X, colour=km.out$cluster,
label=F, label.size=5,
loadings = F, loadings.colour = 'blue',
loadings.label = F, loadings.label.size = 3)
K = 4
km.out <- kmeans(happiness.X, K, iter.max = 10)
invalidclustering <- function(km.out){
clust <- km.out$cluster
scand <- clust[c("Norway", "Denmark", "Sweden", "Finland")]
!((sd(scand) == 0) & (clust["United States"] != scand["Norway"]))
}
i <- 1
print(paste("iteration", i))
while(invalidclustering(km.out)){
i <- i + 1
print(paste("iteration", i))
km.out <- kmeans(happiness.X, K, iter.max = 10)
}
autoplot(pca_mat, data = happiness.X, colour=km.out$cluster,
label=F, label.size=5,
loadings = F, loadings.colour = 'blue',
loadings.label = F, loadings.label.size = 3)
K = 4
km.out <- kmeans(happiness.X, K, iter.max = 10)
invalidclustering <- function(km.out){
clust <- km.out$cluster
scand <- clust[c("Norway", "Denmark", "Sweden", "Finland")]
!((sd(scand) == 0) & (clust["United States"] != scand["Norway"]))
}
i <- 1
print(paste("iteration", i))
while(invalidclustering(km.out)){
i <- i + 1
print(paste("iteration", i))
km.out <- kmeans(happiness.X, K, iter.max = 10)
}
autoplot(pca_mat, data = happiness.X, colour=km.out$cluster,
label=F, label.size=5,
loadings = F, loadings.colour = 'blue',
loadings.label = F, loadings.label.size = 3)
K = 4
km.out <- kmeans(happiness.X, K, iter.max = 10)
invalidclustering <- function(km.out){
clust <- km.out$cluster
scand <- clust[c("Norway", "Denmark", "Sweden", "Finland")]
!((sd(scand) == 0) & (clust["United States"] != scand["Norway"]))
}
i <- 1
print(paste("iteration", i))
while(invalidclustering(km.out)){
i <- i + 1
print(paste("iteration", i))
km.out <- kmeans(happiness.X, K, iter.max = 10)
}
autoplot(pca_mat, data = happiness.X, colour=km.out$cluster,
label=F, label.size=5,
loadings = F, loadings.colour = 'blue',
loadings.label = F, loadings.label.size = 3)
K = 3
km.out <- kmeans(happiness.X, K, iter.max = 10)
invalidclustering <- function(km.out){
clust <- km.out$cluster
scand <- clust[c("Norway", "Denmark", "Sweden", "Finland")]
!((sd(scand) == 0) & (clust["United States"] != scand["Norway"]))
}
i <- 1
print(paste("iteration", i))
while(invalidclustering(km.out)){
i <- i + 1
print(paste("iteration", i))
km.out <- kmeans(happiness.X, K, iter.max = 10)
}
autoplot(pca_mat, data = happiness.X, colour=km.out$cluster,
label=F, label.size=5,
loadings = F, loadings.colour = 'blue',
loadings.label = F, loadings.label.size = 3)
plsr_model.2 <- plsR(formula=Ladder.score~., data=happiness.XY,
scaleX=T, scaleY=T, nt=2)
plsr_model.2
centers <- km.out$centers
centers
happiness.XY
centers <- km.out$centers
centers
centers.df <- data.frame(c.1 <- centers[1,])
centers.df
happiness.XY
plsr_model.2 <- plsR(formula=Ladder.score~., data=happiness.XY,
scaleX=T, scaleY=T, nt=2)
centers <- km.out$centers
centers
centers.df <- data.frame(c.1 <- values(centers[1,]))
centers.df <- data.frame(centers)
centers.df
pred <- predict(plsr_model.2, centers.df)
pred
clust <- km.out$cluster
scand <- clust[c("Norway", "Denmark", "Sweden", "Finland")]
scand
happiness.XY
clust <- km.out$cluster
scand <- clust[c("Norway", "Denmark", "Sweden", "Finland")]
scand
plsr_model.2 <- plsR(formula=Ladder.score~., data=happiness.XY,
scaleX=T, scaleY=T, nt=2)
centers.df <- data.frame(km.out$centers)
pred <- predict(plsr_model.2, centers.df)
pred
centers.df
centers.df <- data.frame(km.out$centers)
pred <- predict(plsr_model.2, centers.df)
pred
clust[c("Norway", "Denmark", "Sweden", "Finland")]
clust["United States"]
happiness.XY
clust <- km.out$cluster
clust[c("Norway", "Denmark", "Sweden", "Finland")]
clust["United States"]
plsr_model.2 <- plsR(formula=Ladder.score~., data=happiness.XY,
scaleX=T, scaleY=T, nt=2)
centers.df <- data.frame(km.out$centers)
pred <- predict(plsr_model.2, centers.df)
pred
centers.df
centers.df
pred
happiness.XY
clust <- km.out$cluster
clust[c("Norway", "Denmark", "Sweden", "Finland")]
clust["United States"]
plsr_model.2 <- plsR(formula=Ladder.score~., data=happiness.XY,
scaleX=T, scaleY=T, nt=2)
centers.df <- data.frame(km.out$centers)
pred <- predict(plsr_model.2, centers.df)
pred
centers.df
clust <- km.out$cluster
clust[c("Norway", "Denmark", "Sweden", "Finland")]
clust["United States"]
plsr_model.2 <- plsR(formula=Ladder.score~., data=happiness.XY,
scaleX=T, scaleY=T, nt=2)
centers.df <- data.frame(km.out$centers)
pred <- predict(plsr_model.2, centers.df)
pred
centers.df
View(happiness.Y)
View(happiness.Y)
mean_ladder <- sapply(1:3, function(i) mean(happiness.Y[names(clust[clust == i])]))
names(clust[clust == i])])
names(clust[clust == i]))
names(clust[clust == i])
mean_ladder <- sapply(1:3, function(i) mean(happiness.Y[,names(clust[clust == i])]))
countries <- names(clust[clust == 1])
countries
happiness.Y[countries]
happiness.Y[,countries]
happiness.Y[c(countries)]
happiness.Y[,c(countries)]
View(happiness.Y)
happiness.Y[c(countries),]
mean_ladder <- sapply(1:3, function(i) mean(happiness.Y[names(clust[clust == i]),2]))
mean_ladder
clust <- km.out$cluster
clust[c("Norway", "Denmark", "Sweden", "Finland")]
clust["United States"]
mean_ladder <- sapply(1:3, function(i) mean(happiness.Y[names(clust[clust == i]),2]))
mean_ladder
